package com.bbrownsound{	//Import the required flash classes	import flash.media.Sound;	import flash.events.SampleDataEvent;	import flash.events.Event;	public class SineWave	{		//Class variables		protected const SAMPLE_RATE:Number = 44100;		protected var _position:int = 0;		protected var _tone:Sound;		protected var _numSamples:int = 2048;		protected var _samples:Vector.<Number > ;		protected var _isPlaying:Boolean = false;		protected var _baseFrequency:Number;		protected var _amp:Number = 1.0;		public function SineWave(base:Number,vol:Number)		{			_baseFrequency = base;			_amp = vol;			_tone = new Sound  ;			_tone.addEventListener(SampleDataEvent.SAMPLE_DATA,onSampleData);			_samples = new Vector.<Number >   ;			createSamples();		}		protected function createSamples():void		{			var i:int = 0;			var mult:Number = _baseFrequency / SAMPLE_RATE * Math.PI * 2;			while ((_amp > 0.1))			{				_samples[i] = Math.sin((i * mult)) * _amp;				_amp *=  0.9998;				i++;			}			_samples.length = i;		}		public function play():void		{			if (! _isPlaying)			{				_position = 0;				_tone.play();				_isPlaying = true;			}		}		protected function onSampleData(evt:SampleDataEvent):void		{			for (var i:int = 0; i < _numSamples; i++)			{				if ((_position >= _samples.length))				{					_isPlaying = false;					return;				}				else				{					evt.data.writeFloat(_samples[_position]);					evt.data.writeFloat(_samples[_position]);					_position++;				}			}		}		public function set frequency(value:Number):void		{			_baseFrequency = value;			createSamples();		}		public function get frequency():Number		{			return _baseFrequency;		}		public function set amplitude(value:Number):void		{			_amp = value;			createSamples();		}		public function get amplitude():Number		{			return _amp;		}	}}